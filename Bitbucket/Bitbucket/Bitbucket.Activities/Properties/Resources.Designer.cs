//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bitbucket.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Bitbucket.Activities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        public static string Authentication_Category {
            get {
                return ResourceManager.GetString("Authentication_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Username you use for your Bitbucket account..
        /// </summary>
        public static string BitbucketAPIScope_AccountUsername_Description {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_AccountUsername_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account Username.
        /// </summary>
        public static string BitbucketAPIScope_AccountUsername_DisplayName {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_AccountUsername_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The App Password you have configured in your Bitbucket account..
        /// </summary>
        public static string BitbucketAPIScope_AppPassword_Description {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_AppPassword_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App Password.
        /// </summary>
        public static string BitbucketAPIScope_AppPassword_DisplayName {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_AppPassword_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorises all Bitbucket activites within the scope..
        /// </summary>
        public static string BitbucketAPIScope_Description {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bitbucket API Scope.
        /// </summary>
        public static string BitbucketAPIScope_DisplayName {
            get {
                return ResourceManager.GetString("BitbucketAPIScope_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the branch that the new commit should be created on. When omitted, the commit will be created on top of the main branch and will become the main branch&apos;s new head..
        /// </summary>
        public static string CommitFile_BranchName_Description {
            get {
                return ResourceManager.GetString("CommitFile_BranchName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branch Name (Optional).
        /// </summary>
        public static string CommitFile_BranchName_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_BranchName_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The commit message for this file commit..
        /// </summary>
        public static string CommitFile_CommitMessage_Description {
            get {
                return ResourceManager.GetString("CommitFile_CommitMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit Message.
        /// </summary>
        public static string CommitFile_CommitMessage_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_CommitMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit a file to the specified repository location with a commit message..
        /// </summary>
        public static string CommitFile_Description {
            get {
                return ResourceManager.GetString("CommitFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit File.
        /// </summary>
        public static string CommitFile_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pointer to the file you want to be commit to the repository from your local system..
        /// </summary>
        public static string CommitFile_FileToUpload_Description {
            get {
                return ResourceManager.GetString("CommitFile_FileToUpload_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File To Upload.
        /// </summary>
        public static string CommitFile_FileToUpload_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_FileToUpload_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result (if any) returned from the action performed in JSON format..
        /// </summary>
        public static string CommitFile_JsonResult_Description {
            get {
                return ResourceManager.GetString("CommitFile_JsonResult_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON Result.
        /// </summary>
        public static string CommitFile_JsonResult_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_JsonResult_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file path that includes the file name that will be created in the repository. This can also include any number of folder and subfolders.
        ///Example: /myFolder/myFileName.txt.
        /// </summary>
        public static string CommitFile_RepositoryLocation_Description {
            get {
                return ResourceManager.GetString("CommitFile_RepositoryLocation_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository Location.
        /// </summary>
        public static string CommitFile_RepositoryLocation_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_RepositoryLocation_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Universally Unique Identifier (UUID) of the repository or slug.
        ///Examples:
        ///UUID: 11111111-1111-1111-1111-111111111111
        ///Slug: test-repo.
        /// </summary>
        public static string CommitFile_RepositoryUUIDOrSlug_Description {
            get {
                return ResourceManager.GetString("CommitFile_RepositoryUUIDOrSlug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository UUID or Slug.
        /// </summary>
        public static string CommitFile_RepositoryUUIDOrSlug_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_RepositoryUUIDOrSlug_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Universally Unique Identifier (UUID) of the workspace or slug.
        ///Examples:
        ///UUID: 11111111-1111-1111-1111-111111111111
        ///Slug: myWorkspace.
        /// </summary>
        public static string CommitFile_WorkspaceUUIDOrSlug_Description {
            get {
                return ResourceManager.GetString("CommitFile_WorkspaceUUIDOrSlug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace UUID or Slug.
        /// </summary>
        public static string CommitFile_WorkspaceUUIDOrSlug_DisplayName {
            get {
                return ResourceManager.GetString("CommitFile_WorkspaceUUIDOrSlug_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, continue executing the remaining activities even if the current activity has failed..
        /// </summary>
        public static string ContinueOnError_Description {
            get {
                return ResourceManager.GetString("ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError.
        /// </summary>
        public static string ContinueOnError_DisplayName {
            get {
                return ResourceManager.GetString("ContinueOnError_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do.
        /// </summary>
        public static string Do {
            get {
                return ResourceManager.GetString("Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get all repositories from the configured Bitbucket account in the scope activity..
        /// </summary>
        public static string GetRepositories_Description {
            get {
                return ResourceManager.GetString("GetRepositories_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Repositories.
        /// </summary>
        public static string GetRepositories_DisplayName {
            get {
                return ResourceManager.GetString("GetRepositories_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A paginated JObject output of repositories..
        /// </summary>
        public static string GetRepositories_RepositoriesJObject_Description {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesJObject_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repositories (JObject).
        /// </summary>
        public static string GetRepositories_RepositoriesJObject_DisplayName {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesJObject_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of repository slugs..
        /// </summary>
        public static string GetRepositories_RepositoriesSlugList_Description {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesSlugList_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository Slugs (List&lt;string&gt;).
        /// </summary>
        public static string GetRepositories_RepositoriesSlugList_DisplayName {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesSlugList_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of repository Universally Unique Identifiers (UUIDs)..
        /// </summary>
        public static string GetRepositories_RepositoriesUUIDList_Description {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesUUIDList_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository UUIDs (List&lt;string&gt;).
        /// </summary>
        public static string GetRepositories_RepositoriesUUIDList_DisplayName {
            get {
                return ResourceManager.GetString("GetRepositories_RepositoriesUUIDList_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Universally Unique Identifier (UUID) of the workspace or slug
        ///Examples:
        ///UUID: 11111111-1111-1111-1111-111111111111
        ///Slug: myWorkspace.
        /// </summary>
        public static string GetRepositories_WorkspaceUUIDOrSlug_Description {
            get {
                return ResourceManager.GetString("GetRepositories_WorkspaceUUIDOrSlug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace UUID or Slug.
        /// </summary>
        public static string GetRepositories_WorkspaceUUIDOrSlug_DisplayName {
            get {
                return ResourceManager.GetString("GetRepositories_WorkspaceUUIDOrSlug_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets all workspaces from the configured Bitbucket account in the scope..
        /// </summary>
        public static string GetWorkspaces_Description {
            get {
                return ResourceManager.GetString("GetWorkspaces_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Workspaces.
        /// </summary>
        public static string GetWorkspaces_DisplayName {
            get {
                return ResourceManager.GetString("GetWorkspaces_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A paginated JObject output of workspaces..
        /// </summary>
        public static string GetWorkspaces_WorkspacesJObject_Description {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesJObject_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspaces (JObject).
        /// </summary>
        public static string GetWorkspaces_WorkspacesJObject_DisplayName {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesJObject_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list workspace slugs..
        /// </summary>
        public static string GetWorkspaces_WorkspacesSlugList_Description {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesSlugList_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace Slugs (List&lt;string&gt;).
        /// </summary>
        public static string GetWorkspaces_WorkspacesSlugList_DisplayName {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesSlugList_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of workspace Universally Unique Identifiers (UUIDs)..
        /// </summary>
        public static string GetWorkspaces_WorkspacesUUIDList_Description {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesUUIDList_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace UUIDs (List&lt;string&gt;).
        /// </summary>
        public static string GetWorkspaces_WorkspacesUUIDList_DisplayName {
            get {
                return ResourceManager.GetString("GetWorkspaces_WorkspacesUUIDList_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString("Input_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action to be performed. Read repository (GET), Create Repository (PUT), Delete Repository (DELETE).
        ///When creating a repository, use a slug and not a UUID..
        /// </summary>
        public static string ManageRepository_Action_Description {
            get {
                return ResourceManager.GetString("ManageRepository_Action_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string ManageRepository_Action_DisplayName {
            get {
                return ResourceManager.GetString("ManageRepository_Action_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the action to be performed..
        /// </summary>
        public static string ManageRepository_Action_Hint {
            get {
                return ResourceManager.GetString("ManageRepository_Action_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform actions on a repository like create, delete, and read..
        /// </summary>
        public static string ManageRepository_Description {
            get {
                return ResourceManager.GetString("ManageRepository_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Repository.
        /// </summary>
        public static string ManageRepository_DisplayName {
            get {
                return ResourceManager.GetString("ManageRepository_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result returned from the action performed in JSON format..
        /// </summary>
        public static string ManageRepository_JsonResult_Description {
            get {
                return ResourceManager.GetString("ManageRepository_JsonResult_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON Result.
        /// </summary>
        public static string ManageRepository_JsonResult_DisplayName {
            get {
                return ResourceManager.GetString("ManageRepository_JsonResult_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Universally Unique Identifier (UUID) of the repository or slug.
        ///Examples:
        ///UUID: 11111111-1111-1111-1111-111111111111
        ///Slug: test-repo.
        /// </summary>
        public static string ManageRepository_RepositoryUUIDOrSlug_Description {
            get {
                return ResourceManager.GetString("ManageRepository_RepositoryUUIDOrSlug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository UUID or Slug.
        /// </summary>
        public static string ManageRepository_RepositoryUUIDOrSlug_DisplayName {
            get {
                return ResourceManager.GetString("ManageRepository_RepositoryUUIDOrSlug_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Universally Unique Identifier (UUID) of the workspace or slug.
        ///Examples:
        ///UUID: 11111111-1111-1111-1111-111111111111
        ///Slug: myWorkspace.
        /// </summary>
        public static string ManageRepository_WorkspaceUUIDOrSlug_Description {
            get {
                return ResourceManager.GetString("ManageRepository_WorkspaceUUIDOrSlug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workspace UUID or Slug.
        /// </summary>
        public static string ManageRepository_WorkspaceUUIDOrSlug_DisplayName {
            get {
                return ResourceManager.GetString("ManageRepository_WorkspaceUUIDOrSlug_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString("Options_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString("Output_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute)..
        /// </summary>
        public static string Timeout_Description {
            get {
                return ResourceManager.GetString("Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout (milliseconds).
        /// </summary>
        public static string Timeout_DisplayName {
            get {
                return ResourceManager.GetString("Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activity timed out and was canceled..
        /// </summary>
        public static string Timeout_Error {
            get {
                return ResourceManager.GetString("Timeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value either for {0} or {1}, but not both..
        /// </summary>
        public static string ValidationExclusiveProperties_Error {
            get {
                return ResourceManager.GetString("ValidationExclusiveProperties_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide values for both {0} and {1}..
        /// </summary>
        public static string ValidationOverloadGroup_Error {
            get {
                return ResourceManager.GetString("ValidationOverloadGroup_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be used outside of a {0}..
        /// </summary>
        public static string ValidationScope_Error {
            get {
                return ResourceManager.GetString("ValidationScope_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value for {0}..
        /// </summary>
        public static string ValidationValue_Error {
            get {
                return ResourceManager.GetString("ValidationValue_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The branch name must not be a zero-length string. Leave the field blank or enter a valid name..
        /// </summary>
        public static string ValidationValue_Error_CommitFile_BranchName {
            get {
                return ResourceManager.GetString("ValidationValue_Error_CommitFile_BranchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The repository UUID or Slug must not be a zero-length string. Enter a valid value..
        /// </summary>
        public static string ValidationValue_Error_ManageRepository_RepositoryUUIDOrSlug {
            get {
                return ResourceManager.GetString("ValidationValue_Error_ManageRepository_RepositoryUUIDOrSlug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When creating a repository, the &quot;Repository UUID or Slug&quot; value must be a slug and cannot be a UUID..
        /// </summary>
        public static string ValidationValue_Error_ManageRepository_RepositoryUUIDOrSlug_NotUUID {
            get {
                return ResourceManager.GetString("ValidationValue_Error_ManageRepository_RepositoryUUIDOrSlug_NotUUID", resourceCulture);
            }
        }
    }
}
